
--------------------------------------------------------------------------

.ones() -> crea un array segun los datos dados y devuelve shape and type LLENO 
de unos (1,1)

-----------------------------------------------------------------------

.zero() -> lo mismo pero nos devulve 0s

---------------------------------------------------------------------

.arange()


---------------------------------------------------------------------------

.random.randint() -> random.randint(low, high=None, size=None, dtype=int)
Return random integers from low (inclusive) to high (exclusive).
Return random integers from the “discrete uniform” distribution of the specified dtype in the “half-open” interval [low, high).
If high is None (the default), then results are from [0, low).

https://numpy.org/doc/stable/reference/random/generated/numpy.random.randint.html#numpy.random.randint

----------------------------------------------------------------------

.random.random()  ->
Return random floats in the half-open interval [0.0, 1.0)

------------------------------------------------------------------------

.random.seed() ->
Usado para generar secuencias reproducibles de números pseudoaleatorios, el objeto BitGenerator acepta una semilla que se utiliza para establecer el estado inicial. 
Esto se puede lograr estableciendo numpy.random.seed

